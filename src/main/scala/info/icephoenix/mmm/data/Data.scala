package info.icephoenix.mmm.data

import org.joda.time.Period

///////////////////////////////////////////////////////////////////////////////
// Generic stuff
///////////////////////////////////////////////////////////////////////////////
sealed trait Message;

sealed trait ServerMessage extends Message {
  val port: Int
};

///////////////////////////////////////////////////////////////////////////////
// Server status messages
///////////////////////////////////////////////////////////////////////////////
// Requests
///////////////////////////////////////////////////////////////////////////////
case class ServerReport(port: Int) extends ServerMessage;

case object AllServerReport extends Message;

///////////////////////////////////////////////////////////////////////////////
// Responses
///////////////////////////////////////////////////////////////////////////////
sealed trait ServerStatus extends Message;

case class ServerOnline(port: Int,
                        players: Seq[String],
                        ctime: Period,
                        mtime: Period)
  extends ServerStatus;

case class ServerStopped(port: Int) extends ServerStatus;

case class ServerTimedOut(port: Int) extends ServerStatus;

case class ServerFailed(port: Int, error: String) extends ServerStatus;

case class AllServerStatus(status: Seq[ServerStatus]) extends Message;

///////////////////////////////////////////////////////////////////////////////
// Server control messages
///////////////////////////////////////////////////////////////////////////////
case class StartServer(port: Int, password: String) extends ServerMessage;

case class StopServer(port: Int) extends ServerMessage;

case class ResetServer(port: Int) extends ServerMessage;
